{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\components\\\\WeekGlance.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeekGlance = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const a = data[0].estimatedArrival;\n  const b = Date.parse(data[0].estimatedArrival);\n  const today = format(new Date(), \"MM/dd/yy\");\n  const [todayIndex, setTodayIndex] = useState(0);\n  data.sort((a, b) => {\n    const da = Date.parse(a.estimatedArrival);\n    const db = Date.parse(b.estimatedArrival);\n    return da - db;\n  });\n  setTodayIndex(data.findIndex(e => e.estimatedArrival === today));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [a, \" \", b, \" \", today, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: data.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: e.estimatedArrival\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeekGlance, \"AiBTkwCu/CSb1fq3J1z3pYuTh3M=\");\n\n_c = WeekGlance;\nexport default WeekGlance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekGlance\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/components/WeekGlance.tsx"],"names":["useState","format","WeekGlance","data","a","estimatedArrival","b","Date","parse","today","todayIndex","setTodayIndex","sort","da","db","findIndex","e","display","flexWrap","map","i"],"mappings":";;;AAAA,SAAkCA,QAAlC,QAAkD,OAAlD;AACA,SAASC,MAAT,QAAgC,UAAhC;;;AAUA,MAAMC,UAAU,GAAE,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AACjC,QAAMC,CAAC,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAlB;AACA,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAnB,CAAV;AACA,QAAMI,KAAS,GAAGR,MAAM,CAAC,IAAIM,IAAJ,EAAD,EAAa,UAAb,CAAxB;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACAG,EAAAA,IAAI,CAACS,IAAL,CAAU,CAACR,CAAD,EAAOE,CAAP,KAAe;AACrB,UAAMO,EAAM,GAAGN,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAACC,gBAAb,CAAf;AACA,UAAMS,EAAM,GAAGP,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACD,gBAAb,CAAf;AACA,WAAOQ,EAAE,GAACC,EAAV;AACH,GAJD;AAOAH,EAAAA,aAAa,CAACR,IAAI,CAACY,SAAL,CAAgBC,CAAD,IAAYA,CAAC,CAACX,gBAAF,KAAuBI,KAAlD,CAAD,CAAb;AAEA,sBACI;AAAA,eACKL,CADL,OACSE,CADT,OACaG,KADb,eAEI;AAAK,MAAA,KAAK,EAAE;AAACQ,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAZ;AAAA,gBACKf,IAAI,CAACgB,GAAL,CAAS,CAACH,CAAD,EAAQI,CAAR,KAAqB;AAC3B,4BACI;AAAA,iCACI;AAAA,sBAAIJ,CAAC,CAACX;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUe,CAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA7BD;;GAAMlB,U;;KAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\r\nimport { format, getTime } from 'date-fns'\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\ninterface Props {\r\n    data: any\r\n}\r\n\r\n\r\nconst WeekGlance= ({data}: Props) => {\r\n    const a = data[0].estimatedArrival\r\n    const b = Date.parse(data[0].estimatedArrival)\r\n    const today:any = format(new Date(), \"MM/dd/yy\")\r\n    const [todayIndex, setTodayIndex] = useState(0)\r\n    data.sort((a:any,b:any)=>{\r\n        const da:any = Date.parse(a.estimatedArrival)\r\n        const db:any = Date.parse(b.estimatedArrival)\r\n        return da-db\r\n    })\r\n\r\n    \r\n    setTodayIndex(data.findIndex((e:any) =>  e.estimatedArrival === today))\r\n\r\n    return (\r\n        <div>\r\n            {a} {b} {today}\r\n            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                {data.map((e:any, i:number) => {\r\n                    return(\r\n                        <div key={i}>\r\n                            <p>{e.estimatedArrival}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekGlance;\r\n"]},"metadata":{},"sourceType":"module"}