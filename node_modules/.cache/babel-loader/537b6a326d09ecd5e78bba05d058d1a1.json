{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\components\\\\WeekGlance.tsx\";\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeekGlance = _ref => {\n  let {\n    data\n  } = _ref;\n  const a = data[0].estimatedArrival;\n  const b = Date.parse(data[0].estimatedArrival);\n  const today = format(new Date(), \"MM/dd/yy\");\n  const todaysIndex = data.findIndex(e => e.estimatedArrival === today);\n  data.sort((a, b) => {\n    const da = Date.parse(a.estimatedArrival);\n    const db = Date.parse(b.estimatedArrival);\n    return da - db;\n  });\n\n  function weekSet() {\n    data.map((e, o) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [e.estimatedArrival === today && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 59\n      }, this), \"  \"]\n    }, o, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this));\n    let week = [];\n    let deliveryDay = [];\n\n    for (let i = 0; i <= 6; i++) {\n      week[i] = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [deliveryDay.length, data.map((e, o) => deliveryDay[i] = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.estimatedArrival === today && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: e.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, this)\n        }, o, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    }\n\n    return week;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      padding: \"5px\",\n      margin: '5px'\n    },\n    children: weekSet()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WeekGlance;\nexport default WeekGlance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekGlance\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/components/WeekGlance.tsx"],"names":["format","WeekGlance","data","a","estimatedArrival","b","Date","parse","today","todaysIndex","findIndex","e","sort","da","db","weekSet","map","o","id","week","deliveryDay","i","length","display","padding","margin"],"mappings":";AACA,SAASA,MAAT,QAAgC,UAAhC;;;AAUA,MAAMC,UAAU,GAAE,QAAmB;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AACjC,QAAMC,CAAC,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAlB;AACA,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAnB,CAAV;AACA,QAAMI,KAAS,GAAGR,MAAM,CAAC,IAAIM,IAAJ,EAAD,EAAa,UAAb,CAAxB;AACA,QAAMG,WAAmB,GAAIP,IAAI,CAACQ,SAAL,CAAgBC,CAAD,IAAYA,CAAC,CAACP,gBAAF,KAAuBI,KAAlD,CAA7B;AACAN,EAAAA,IAAI,CAACU,IAAL,CAAU,CAACT,CAAD,EAAOE,CAAP,KAAe;AACrB,UAAMQ,EAAM,GAAGP,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAACC,gBAAb,CAAf;AACA,UAAMU,EAAM,GAAGR,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACD,gBAAb,CAAf;AACA,WAAOS,EAAE,GAACC,EAAV;AACH,GAJD;;AAOA,WAASC,OAAT,GAAmB;AACfb,IAAAA,IAAI,CAACc,GAAL,CAAS,CAACL,CAAD,EAAOM,CAAP,kBACL;AAAA,iBAAcN,CAAC,CAACP,gBAAF,KAAuBI,KAAvB,iBAAgC;AAAA,kBAAMG,CAAC,CAACO;AAAR;AAAA;AAAA;AAAA;AAAA,cAA9C;AAAA,OAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,YADJ;AAIA,QAAIE,IAAI,GAAG,EAAX;AACA,QAAIC,WAAW,GAAE,EAAjB;;AACA,SAAK,IAAIC,CAAQ,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAAgCA,CAAC,EAAjC,EAAqC;AACjCF,MAAAA,IAAI,CAACE,CAAD,CAAJ,gBACI;AAAA,mBACKD,WAAW,CAACE,MADjB,EAGQpB,IAAI,CAACc,GAAL,CAAS,CAACL,CAAD,EAAOM,CAAP,KACLG,WAAW,CAACC,CAAD,CAAX,gBACI;AAAA,oBAEIV,CAAC,CAACP,gBAAF,KAAuBI,KAAvB,iBAEA;AAAA,sBAAMG,CAAC,CAACO;AAAR;AAAA;AAAA;AAAA;AAAA;AAJJ,WAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,gBAFR,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH;;AACD,WAAOE,IAAP;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,OAAO,EAAE,KAA3B;AAAkCC,MAAAA,MAAM,EAAC;AAAzC,KAAZ;AAAA,cACIV,OAAO;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhDD;;KAAMd,U;AAkDN,eAAeA,UAAf","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\r\nimport { format, getTime } from 'date-fns'\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\ninterface Props {\r\n    data: any\r\n}\r\n\r\n\r\nconst WeekGlance= ({data}: Props) => {\r\n    const a = data[0].estimatedArrival\r\n    const b = Date.parse(data[0].estimatedArrival)\r\n    const today:any = format(new Date(), \"MM/dd/yy\")\r\n    const todaysIndex: number  = data.findIndex((e:any) =>  e.estimatedArrival === today)\r\n    data.sort((a:any,b:any)=>{\r\n        const da:any = Date.parse(a.estimatedArrival)\r\n        const db:any = Date.parse(b.estimatedArrival)\r\n        return da-db\r\n    })\r\n\r\n    \r\n    function weekSet (){   \r\n        data.map((e:any,o:number)=>(\r\n            <div key={o}>{e.estimatedArrival === today && <div>{e.id}</div>}  </div>\r\n              \r\n        )) \r\n        let week = []\r\n        let deliveryDay =[]\r\n        for (let i:number = 0; i <= 6 ; i ++){\r\n            week[i] = (\r\n                <div>\r\n                    {deliveryDay.length}\r\n                    {\r\n                        data.map((e:any,o:number)=>(\r\n                            deliveryDay[i] =(\r\n                                <div key={o}>\r\n                                    {\r\n                                    e.estimatedArrival === today \r\n                                    && \r\n                                    <div>{e.id}</div>\r\n                                    }  \r\n                                </div>\r\n                            )         \r\n                        )) \r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        return week\r\n    }\r\n\r\n    return (\r\n        <div style={{display: \"flex\", padding: \"5px\", margin:'5px'}}>\r\n           {weekSet()}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekGlance;\r\n"]},"metadata":{},"sourceType":"module"}