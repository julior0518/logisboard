{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\components\\\\WeekGlance.tsx\";\nimport { format } from 'date-fns';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeekGlance = _ref => {\n  let {\n    data\n  } = _ref;\n  const a = data[0].estimatedArrival;\n  const b = Date.parse(data[0].estimatedArrival);\n  const today = format(new Date(), \"MM/dd/yy\");\n  const todayCalc = new Date();\n  const color = {\n    ARRIVED: \"24FF00\",\n    TRANSPORT_ERROR: \"E0000E\",\n    IN_TRANSIT: \"00D6E0\",\n    ROLL_OVER: \"C8E000\",\n    CANCELLED: \"636363\",\n    CUSTOMS_HOLD: \"D78100\"\n  };\n  data.sort((a, b) => {\n    const da = Date.parse(a.estimatedArrival);\n    const db = Date.parse(b.estimatedArrival);\n    return da - db;\n  });\n\n  function weekSet() {\n    let week = [];\n    let deliveryDay;\n\n    for (let i = 0; i <= 6; i++) {\n      i === 0 ? todayCalc : todayCalc.setDate(todayCalc.getDate() + 1);\n      const todayDynamic = format(todayCalc, \"MM/dd/yy\");\n      deliveryDay = data.filter((e, o) => e.estimatedArrival === todayDynamic);\n      let dayOftheWeek = new Date(todayDynamic).getDay();\n      let dayOftheWeekString = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", 'Sunday'];\n      week[i] = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: \"10%\",\n          height: \"min-content\",\n          margin: \"5px 10px 5px 0\",\n          padding: \"5px 10px 5px 0\",\n          borderRight: \"4px solid #80baac\",\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: \"5px\",\n            padding: \"5px\",\n            alignItems: \"center\",\n            fontSize: \"large\",\n            color: \"gray\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                margin: \"0 5px 0 0\"\n              },\n              children: dayOftheWeekString[dayOftheWeek]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"small\",\n                opacity: '80%'\n              },\n              children: todayDynamic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"x-large\",\n              display: \"grid\",\n              color: \"#05a82b\",\n              margin: \"0 0 0 10px\"\n            },\n            children: deliveryDay.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          children: data.map((e, o) => {\n            let colorCode;\n\n            /*#__PURE__*/\n            _jsxDEV(\"div\", {\n              children: e.estimatedArrival === todayDynamic && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"daySlot\",\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  margin: \"0 5px 0 10px\",\n                  padding: \"5px\",\n                  height: \"1vh\",\n                  aspectRatio: \"1/1\",\n                  borderRadius: \"360px\",\n                  backgroundColor: \"\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 45\n              }, this)\n            }, o, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n\n    return week;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small WeekGlance\",\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      padding: \"20px \"\n    },\n    children: weekSet()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WeekGlance;\nexport default WeekGlance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekGlance\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/components/WeekGlance.tsx"],"names":["format","WeekGlance","data","a","estimatedArrival","b","Date","parse","today","todayCalc","color","ARRIVED","TRANSPORT_ERROR","IN_TRANSIT","ROLL_OVER","CANCELLED","CUSTOMS_HOLD","sort","da","db","weekSet","week","deliveryDay","i","setDate","getDate","todayDynamic","filter","e","o","dayOftheWeek","getDay","dayOftheWeekString","minWidth","height","margin","padding","borderRight","cursor","display","justifyContent","alignItems","fontSize","flexDirection","opacity","length","map","colorCode","aspectRatio","borderRadius","backgroundColor","flexWrap"],"mappings":"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","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\r\nimport { format, getTime } from 'date-fns'\r\nimport '../App.css'\r\nimport Loader from 'react-loader-spinner'\r\nimport { da } from \"date-fns/locale\"\r\n\r\n\r\ninterface Props {\r\n    data: any\r\n}\r\n\r\n\r\nconst WeekGlance= ({data}: Props) => {\r\n    const a = data[0].estimatedArrival\r\n    const b = Date.parse(data[0].estimatedArrival)\r\n    const today:any = format(new Date(), \"MM/dd/yy\")\r\n    const todayCalc:any = new Date()\r\n    const color = {\r\n        ARRIVED: \"24FF00\",\r\n        TRANSPORT_ERROR: \"E0000E\",\r\n        IN_TRANSIT: \"00D6E0\",\r\n        ROLL_OVER: \"C8E000\",\r\n        CANCELLED: \"636363\",\r\n        CUSTOMS_HOLD: \"D78100\",\r\n    }\r\n\r\n\r\n    data.sort((a:any,b:any)=>{\r\n        const da:any = Date.parse(a.estimatedArrival)\r\n        const db:any = Date.parse(b.estimatedArrival)\r\n        return da-db\r\n    })\r\n\r\n    function weekSet (){   \r\n        let week = []\r\n        let deliveryDay \r\n\r\n\r\n        for (let i:number = 0; i <= 6 ; i ++){\r\n            i===0 ? todayCalc : todayCalc.setDate(todayCalc.getDate() + 1);\r\n            const todayDynamic = format(todayCalc, \"MM/dd/yy\")\r\n            deliveryDay = data.filter((e:any,o:number)=>(\r\n                e.estimatedArrival === todayDynamic \r\n            )) \r\n\r\n            let dayOftheWeek:number = new Date(todayDynamic).getDay()\r\n            let dayOftheWeekString = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", 'Sunday']\r\n           \r\n            week[i] = (\r\n                <div  key={i} style={{minWidth: \"10%\", height: \"min-content\", margin:\"5px 10px 5px 0\", padding:\"5px 10px 5px 0\", borderRight: \"4px solid #80baac\", cursor: \"pointer\" }}>\r\n                    <div style={{display:\"flex\", justifyContent: \"space-between\",margin:\"5px\", padding:\"5px\", alignItems: \"center\", fontSize: \"large\", color: \"gray\"}}>\r\n                      \r\n                        <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                            <h3 style={{margin:\"0 5px 0 0\"}}>\r\n                                {dayOftheWeekString[dayOftheWeek]}\r\n                            </h3>\r\n                            <div style={{fontSize:\"small\", opacity:'80%'}}>{todayDynamic}</div>\r\n                        </div>\r\n                        <div style={{fontSize: \"x-large\", display: \"grid\", color: \"#05a82b\", margin:\"0 0 0 10px\"}}>\r\n                            {deliveryDay.length}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display:\"flex\" , flexDirection: \"row\",}}>\r\n                        {\r\n                            data.map((e:any,o:number)=>{\r\n                                let colorCode \r\n                                (\r\n                                    <div key={o}  >\r\n                                        {\r\n                                            e.estimatedArrival === todayDynamic \r\n                                            && \r\n                                            <div \r\n                                                className=\"daySlot\"\r\n                                                style={{display:\"flex\" , flexDirection: \"row\", margin:\"0 5px 0 10px\", padding:\"5px\", height: \"1vh\", aspectRatio: \"1/1\" , borderRadius: \"360px\", backgroundColor: \"\"}}>\r\n                                                {}\r\n                                            </div>\r\n                                        }  \r\n                                    </div>\r\n                            )}) \r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return week\r\n    }\r\n\r\n    return (\r\n        <div className=\"small WeekGlance\" style={{display: \"flex\", flexWrap: \"wrap\",  justifyContent:\"space-between\", padding:\"20px \"}}>\r\n           {weekSet()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekGlance;\r\n"]},"metadata":{},"sourceType":"module"}