{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\pages\\\\DashboardPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Box, makeStyles, useTheme } from \"@material-ui/core\";\nimport Loader from 'react-loader-spinner';\nimport { fetchShipments } from \"../data/fetch-shipments\";\nimport WeekGlance from \"../components/WeekGlance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  loader: {\n    margin: 'auto',\n    width: 'fit-content',\n    marginTop: 200\n  }\n});\nconst INITIAL_RESULT = {\n  status: 'LOADING'\n};\nexport const DashboardPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme(); // useEffect(() => {\n  //     async function fetch () {\n  //         const x = await fetchShipments()\n  //         setFetchShipmentsResult(x)\n  //         console.log(x.status)\n  //         if(x.status === 'SUCCESS'){\n  //             y = x.shipments\n  //             console.log(y)                    \n  //         }\n  //     }\n  //     fetch()\n  // }, [])\n\n  const [fetchShipmentsResult, setFetchShipmentsResult] = useState(INITIAL_RESULT);\n  useEffect(() => {\n    fetchShipments().then(result => {\n      setFetchShipmentsResult(result);\n    });\n  }, []);\n  let component;\n\n  switch (fetchShipmentsResult.status) {\n    case 'SUCCESS':\n      console.log(fetchShipments.shipments);\n      console.log();\n      component = /*#__PURE__*/_jsxDEV(WeekGlance, {\n        data: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'LOADING':\n      component = /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loader,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Grid\",\n          color: theme.palette.primary.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this);\n      break;\n\n    case 'ERROR':\n      component = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this);\n      break;\n  }\n\n  return component;\n};\n\n_s(DashboardPage, \"aaNOSVMT9bV7sP4FGwZJtVzcD70=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/pages/DashboardPage.tsx"],"names":["useEffect","useState","Box","makeStyles","useTheme","Loader","fetchShipments","WeekGlance","useStyles","loader","margin","width","marginTop","INITIAL_RESULT","status","DashboardPage","classes","theme","fetchShipmentsResult","setFetchShipmentsResult","then","result","component","console","log","shipments","palette","primary","main"],"mappings":";;;AAAI,SAAuBA,SAAvB,EAAkCC,QAAlC,QAAsD,OAAtD;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,QAA1B,QAA0C,mBAA1C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAAqD,yBAArD;AACA,OAAQC,UAAR,MAAyB,0BAAzB;;AAKA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,KAAK,EAAE,aAFH;AAGJC,IAAAA,SAAS,EAAE;AAHP;AADiB,CAAD,CAA5B;AAcA,MAAMC,cAA6B,GAAG;AAClCC,EAAAA,MAAM,EAAE;AAD0B,CAAtC;AAIA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AACzC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAMS,KAAK,GAAGb,QAAQ,EAAtB,CAFyC,CAGzC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,QAAM,CAACc,oBAAD,EAAuBC,uBAAvB,IAAkDlB,QAAQ,CAAuCY,cAAvC,CAAhE;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,cAAc,GACTc,IADL,CACUC,MAAM,IAAI;AACZF,MAAAA,uBAAuB,CAACE,MAAD,CAAvB;AACH,KAHL;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,MAAIC,SAAJ;;AACA,UAAQJ,oBAAoB,CAACJ,MAA7B;AACI,SAAK,SAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAYlB,cAAc,CAACmB,SAA3B;AACAF,MAAAA,OAAO,CAACC,GAAR;AACDF,MAAAA,SAAS,gBAAG,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAZ;AAEC;;AACJ,SAAK,SAAL;AACIA,MAAAA,SAAS,gBAAG,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACP,MAAxB;AAAA,+BACR,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,KAAK,EAAEQ,KAAK,CAACS,OAAN,CAAcC,OAAd,CAAsBC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,cAAZ;AAGA;;AACJ,SAAK,OAAL;AACIN,MAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ;AACA;AAdR;;AAiBA,SAAOA,SAAP;AACH,CAhDM;;GAAMP,a;UACOP,S,EACFJ,Q;;;KAFLW,a","sourcesContent":["    import { ReactElement, useEffect, useState, FC } from \"react\"\n    import { Box, makeStyles, useTheme } from \"@material-ui/core\"\n    import Loader from 'react-loader-spinner'\n    import { fetchShipments, FetchShipmentsResult } from \"../data/fetch-shipments\"\n    import  WeekGlance  from \"../components/WeekGlance\"\nimport { useRequestAnimationFrame } from \"beautiful-react-hooks\"\nimport { useDataGridComponent } from \"@material-ui/data-grid\"\n    \n    \n    const useStyles = makeStyles({\n        loader: {\n            margin: 'auto',\n            width: 'fit-content',\n            marginTop: 200\n        }\n     \n    })\n    \n    type LoadingResult = {\n        status: 'LOADING'\n    }\n\n\n    const INITIAL_RESULT: LoadingResult = {\n        status: 'LOADING'\n    }\n    \n    export const DashboardPage: React.FC = () => {\n        const classes = useStyles()\n        const theme = useTheme()\n        // useEffect(() => {\n        //     async function fetch () {\n        //         const x = await fetchShipments()\n        //         setFetchShipmentsResult(x)\n        //         console.log(x.status)\n                \n        //         if(x.status === 'SUCCESS'){\n        //             y = x.shipments\n        //             console.log(y)                    \n        //         }\n\n        //     }\n        //     fetch()\n           \n        // }, [])\n\n        const [fetchShipmentsResult, setFetchShipmentsResult] = useState<FetchShipmentsResult | LoadingResult>(INITIAL_RESULT)\n\n\n        useEffect(() => {\n            fetchShipments()\n                .then(result => {\n                    setFetchShipmentsResult(result)\n                })\n        }, [])\n\n        let component: ReactElement\n        switch (fetchShipmentsResult.status) {\n            case 'SUCCESS':\n                console.log(fetchShipments.shipments)\n                console.log()\n               component = <WeekGlance data={\"a\"} />\n                            \n                break;\n            case 'LOADING':\n                component = <Box className={classes.loader}>\n                    <Loader type=\"Grid\" color={theme.palette.primary.main} />\n                </Box >\n                break\n            case 'ERROR':\n                component = <p>Error</p>\n                break\n        }\n    \n        return component\n    }"]},"metadata":{},"sourceType":"module"}