{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\components\\\\WeekGlance.tsx\";\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeekGlance = _ref => {\n  let {\n    data\n  } = _ref;\n  const a = data[0].estimatedArrival;\n  const b = Date.parse(data[0].estimatedArrival);\n  const today = format(new Date(), \"MM/dd/yy\");\n  const todaysIndex = data.findIndex(e => e.estimatedArrival === today);\n  let week;\n  data.sort((a, b) => {\n    const da = Date.parse(a.estimatedArrival);\n    const db = Date.parse(b.estimatedArrival);\n    return da - db;\n  });\n\n  function weekSet() {\n    for (let i = 0; i <= 6; i++) {\n      console.log(i);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [a, \" \", b, \" \", today, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: data.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: e.estimatedArrival\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), data[todaysIndex].id, weekSet()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WeekGlance;\nexport default WeekGlance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekGlance\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/components/WeekGlance.tsx"],"names":["format","WeekGlance","data","a","estimatedArrival","b","Date","parse","today","todaysIndex","findIndex","e","week","sort","da","db","weekSet","i","console","log","display","flexWrap","map","id"],"mappings":";AACA,SAASA,MAAT,QAAgC,UAAhC;;;AAUA,MAAMC,UAAU,GAAE,QAAmB;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AACjC,QAAMC,CAAC,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAlB;AACA,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAnB,CAAV;AACA,QAAMI,KAAS,GAAGR,MAAM,CAAC,IAAIM,IAAJ,EAAD,EAAa,UAAb,CAAxB;AACA,QAAMG,WAAmB,GAAIP,IAAI,CAACQ,SAAL,CAAgBC,CAAD,IAAYA,CAAC,CAACP,gBAAF,KAAuBI,KAAlD,CAA7B;AACA,MAAII,IAAJ;AACAV,EAAAA,IAAI,CAACW,IAAL,CAAU,CAACV,CAAD,EAAOE,CAAP,KAAe;AACrB,UAAMS,EAAM,GAAGR,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAACC,gBAAb,CAAf;AACA,UAAMW,EAAM,GAAGT,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACD,gBAAb,CAAf;AACA,WAAOU,EAAE,GAACC,EAAV;AACH,GAJD;;AAOA,WAASC,OAAT,GAAkB;AACd,SAAK,IAAIC,CAAQ,GAAG,CAApB,EAAuBA,CAAC,IAAG,CAA3B,EAA8BA,CAAC,EAA/B,EAAkC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEH;AAEJ;;AACD,sBACI;AAAA,eACKd,CADL,OACSE,CADT,OACaG,KADb,eAEI;AAAK,MAAA,KAAK,EAAE;AAACY,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAZ;AAAA,gBACKnB,IAAI,CAACoB,GAAL,CAAS,CAACX,CAAD,EAAQM,CAAR,KAAqB;AAC3B,4BACI;AAAA,iCACI;AAAA,sBAAIN,CAAC,CAACP;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUa,CAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAWKf,IAAI,CAACO,WAAD,CAAJ,CAAkBc,EAXvB,EAYKP,OAAO,EAZZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApCD;;KAAMf,U;AAsCN,eAAeA,UAAf","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\r\nimport { format, getTime } from 'date-fns'\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\ninterface Props {\r\n    data: any\r\n}\r\n\r\n\r\nconst WeekGlance= ({data}: Props) => {\r\n    const a = data[0].estimatedArrival\r\n    const b = Date.parse(data[0].estimatedArrival)\r\n    const today:any = format(new Date(), \"MM/dd/yy\")\r\n    const todaysIndex: number  = data.findIndex((e:any) =>  e.estimatedArrival === today)\r\n    let week:any \r\n    data.sort((a:any,b:any)=>{\r\n        const da:any = Date.parse(a.estimatedArrival)\r\n        const db:any = Date.parse(b.estimatedArrival)\r\n        return da-db\r\n    })\r\n\r\n\r\n    function weekSet(){\r\n        for (let i:number = 0; i <=6; i++){\r\n            console.log(i)\r\n            \r\n        }\r\n    \r\n    }\r\n    return (\r\n        <div>\r\n            {a} {b} {today}\r\n            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                {data.map((e:any, i:number) => {\r\n                    return(\r\n                        <div key={i}>\r\n                            <p>{e.estimatedArrival}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            {data[todaysIndex].id}\r\n            {weekSet()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekGlance;\r\n"]},"metadata":{},"sourceType":"module"}