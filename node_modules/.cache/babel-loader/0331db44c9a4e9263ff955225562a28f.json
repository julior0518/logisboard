{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\pages\\\\DashboardPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Box, makeStyles, useTheme } from \"@material-ui/core\";\nimport Loader from 'react-loader-spinner';\nimport { fetchShipments } from \"../data/fetch-shipments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLUMNS = [{\n  field: 'houseBillNumber',\n  headerName: 'House Bill',\n  width: 150\n}, {\n  field: 'client',\n  headerName: 'Shipper',\n  width: 200\n}, {\n  field: 'origin',\n  headerName: 'Origin',\n  width: 400\n}, {\n  field: 'destination',\n  headerName: 'Destination',\n  width: 400\n}, {\n  field: 'mode',\n  headerName: 'Mode',\n  width: 200\n}, {\n  field: 'estimatedDeparture',\n  headerName: 'Estimated Departure',\n  width: 200\n}, {\n  field: 'estimatedArrival',\n  headerName: 'Estimated Arrival',\n  width: 200\n}, {\n  field: 'status',\n  headerName: 'Status',\n  width: 200\n}];\nconst useStyles = makeStyles({\n  loader: {\n    margin: 'auto',\n    width: 'fit-content',\n    marginTop: 200\n  }\n});\nconst INITIAL_RESULT = {\n  status: 'LOADING'\n};\nexport const DashboardPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [fetchShipmentsResult, setFetchShipmentsResult] = useState(INITIAL_RESULT);\n  useEffect(() => {\n    fetchShipments().then(result => setFetchShipmentsResult(result));\n  }, []);\n  console.log(fetchShipmentsResult);\n  console.log;\n  let component;\n\n  switch (fetchShipmentsResult.status) {\n    case 'SUCCESS':\n      component = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\\"mom\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this);\n      break;\n\n    case 'LOADING':\n      component = /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loader,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Grid\",\n          color: theme.palette.primary.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this);\n      break;\n\n    case 'ERROR':\n      component = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }, this);\n      break;\n  }\n\n  return component;\n};\n\n_s(DashboardPage, \"aaNOSVMT9bV7sP4FGwZJtVzcD70=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/pages/DashboardPage.tsx"],"names":["useEffect","useState","Box","makeStyles","useTheme","Loader","fetchShipments","COLUMNS","field","headerName","width","useStyles","loader","margin","marginTop","INITIAL_RESULT","status","DashboardPage","classes","theme","fetchShipmentsResult","setFetchShipmentsResult","then","result","console","log","component","palette","primary","main"],"mappings":"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","sourcesContent":["    import { ReactElement, useEffect, useState } from \"react\"\n    import { Box, makeStyles, useTheme } from \"@material-ui/core\"\n    import { DataGrid, GridColDef } from \"@material-ui/data-grid\"\n    import Loader from 'react-loader-spinner'\n    import { fetchShipments, FetchShipmentsResult } from \"../data/fetch-shipments\"\n    import { flattenDiagnosticMessageText } from \"typescript\"\n    \n    const COLUMNS: GridColDef[] = [\n        {\n            field: 'houseBillNumber',\n            headerName: 'House Bill',\n            width: 150\n        },\n        {\n            field: 'client',\n            headerName: 'Shipper',\n            width: 200\n        },\n        {\n            field: 'origin',\n            headerName: 'Origin',\n            width: 400\n        },\n        {\n            field: 'destination',\n            headerName: 'Destination',\n            width: 400\n        },\n        {\n            field: 'mode',\n            headerName: 'Mode',\n            width: 200\n        },\n        {\n            field: 'estimatedDeparture',\n            headerName: 'Estimated Departure',\n            width: 200\n        },\n        {\n            field: 'estimatedArrival',\n            headerName: 'Estimated Arrival',\n            width: 200\n        },\n        {\n            field: 'status',\n            headerName: 'Status',\n            width: 200\n        }\n    ]\n    \n    const useStyles = makeStyles({\n        loader: {\n            margin: 'auto',\n            width: 'fit-content',\n            marginTop: 200\n        }\n     \n    })\n    \n    type LoadingResult = {\n        status: 'LOADING'\n    }\n    const INITIAL_RESULT: LoadingResult = {\n        status: 'LOADING'\n    }\n    \n    export const DashboardPage: React.FC = () => {\n\n        const classes = useStyles()\n        const theme = useTheme()\n    \n        const [fetchShipmentsResult, setFetchShipmentsResult] = useState<FetchShipmentsResult | LoadingResult>(INITIAL_RESULT)\n        useEffect(() => {\n            fetchShipments().then(result => setFetchShipmentsResult(result))\n        }, [])\n        console.log(fetchShipmentsResult)\n        console.log\n        let component: ReactElement\n        switch (fetchShipmentsResult.status) {\n            case 'SUCCESS':\n                component = <div>\"mom\"</div>\n                            \n                break;\n            case 'LOADING':\n                component = <Box className={classes.loader}>\n                    <Loader type=\"Grid\" color={theme.palette.primary.main} />\n                </Box >\n                break\n            case 'ERROR':\n                component = <p>Error</p>\n                break\n        }\n    \n        return component\n    }"]},"metadata":{},"sourceType":"module"}