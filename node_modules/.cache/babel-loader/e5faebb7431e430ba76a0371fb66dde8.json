{"ast":null,"code":"import _slicedToArray from\"C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{Box,makeStyles,useTheme}from\"@material-ui/core\";import{DataGrid}from\"@material-ui/data-grid\";import Loader from'react-loader-spinner';import{fetchShipments}from\"../data/fetch-shipments\";import{jsx as _jsx}from\"react/jsx-runtime\";var COLUMNS=[{field:'houseBillNumber',headerName:'House Bill',width:150},{field:'client',headerName:'Shipper',width:200},{field:'origin',headerName:'Origin',width:400},{field:'destination',headerName:'Destination',width:400},{field:'mode',headerName:'Mode',width:200},{field:'estimatedDeparture',headerName:'Estimated Departure',width:200},{field:'estimatedArrival',headerName:'Estimated Arrival',width:200},{field:'status',headerName:'Status',width:200}];var useStyles=makeStyles({grid:{marginInline:16,display:\"flex\",height:\"90%\"},loader:{margin:'auto',width:'fit-content',marginTop:200}});var INITIAL_RESULT={status:'LOADING'};export var ShipmentsPage=function ShipmentsPage(){var classes=useStyles();var theme=useTheme();var _useState=useState(INITIAL_RESULT),_useState2=_slicedToArray(_useState,2),fetchShipmentsResult=_useState2[0],setFetchShipmentsResult=_useState2[1];useEffect(function(){fetchShipments().then(function(result){return setFetchShipmentsResult(result);});},[]);var component;switch(fetchShipmentsResult.status){case'SUCCESS':component=/*#__PURE__*/_jsx(DataGrid,{className:classes.grid,rows:fetchShipmentsResult.shipments,columns:COLUMNS,disableSelectionOnClick:true,autoPageSize:true});break;case'LOADING':component=/*#__PURE__*/_jsx(Box,{className:classes.loader,children:/*#__PURE__*/_jsx(Loader,{type:\"Grid\",color:theme.palette.primary.main})});break;case'ERROR':component=/*#__PURE__*/_jsx(\"p\",{children:\"Error\"});break;}return component;};","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/pages/ShipmentsPage.tsx"],"names":["useEffect","useState","Box","makeStyles","useTheme","DataGrid","Loader","fetchShipments","COLUMNS","field","headerName","width","useStyles","grid","marginInline","display","height","loader","margin","marginTop","INITIAL_RESULT","status","ShipmentsPage","classes","theme","fetchShipmentsResult","setFetchShipmentsResult","then","result","component","shipments","palette","primary","main"],"mappings":"oLAAA,OAAuBA,SAAvB,CAAkCC,QAAlC,KAAkD,OAAlD,CACA,OAASC,GAAT,CAAcC,UAAd,CAA0BC,QAA1B,KAA0C,mBAA1C,CACA,OAASC,QAAT,KAAqC,wBAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAASC,cAAT,KAAqD,yBAArD,C,2CAGA,GAAMC,CAAAA,OAAqB,CAAG,CAC1B,CACIC,KAAK,CAAE,iBADX,CAEIC,UAAU,CAAE,YAFhB,CAGIC,KAAK,CAAE,GAHX,CAD0B,CAM1B,CACIF,KAAK,CAAE,QADX,CAEIC,UAAU,CAAE,SAFhB,CAGIC,KAAK,CAAE,GAHX,CAN0B,CAW1B,CACIF,KAAK,CAAE,QADX,CAEIC,UAAU,CAAE,QAFhB,CAGIC,KAAK,CAAE,GAHX,CAX0B,CAgB1B,CACIF,KAAK,CAAE,aADX,CAEIC,UAAU,CAAE,aAFhB,CAGIC,KAAK,CAAE,GAHX,CAhB0B,CAqB1B,CACIF,KAAK,CAAE,MADX,CAEIC,UAAU,CAAE,MAFhB,CAGIC,KAAK,CAAE,GAHX,CArB0B,CA0B1B,CACIF,KAAK,CAAE,oBADX,CAEIC,UAAU,CAAE,qBAFhB,CAGIC,KAAK,CAAE,GAHX,CA1B0B,CA+B1B,CACIF,KAAK,CAAE,kBADX,CAEIC,UAAU,CAAE,mBAFhB,CAGIC,KAAK,CAAE,GAHX,CA/B0B,CAoC1B,CACIF,KAAK,CAAE,QADX,CAEIC,UAAU,CAAE,QAFhB,CAGIC,KAAK,CAAE,GAHX,CApC0B,CAA9B,CA2CA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,CACzBU,IAAI,CAAE,CACFC,YAAY,CAAE,EADZ,CAEFC,OAAO,CAAE,MAFP,CAGFC,MAAM,CAAE,KAHN,CADmB,CAMzBC,MAAM,CAAE,CACJC,MAAM,CAAE,MADJ,CAEJP,KAAK,CAAE,aAFH,CAGJQ,SAAS,CAAE,GAHP,CANiB,CAAD,CAA5B,CAiBA,GAAMC,CAAAA,cAA6B,CAAG,CAClCC,MAAM,CAAE,SAD0B,CAAtC,CAIA,MAAO,IAAMC,CAAAA,aAAuB,CAAG,QAA1BA,CAAAA,aAA0B,EAAM,CACzC,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CACA,GAAMY,CAAAA,KAAK,CAAGpB,QAAQ,EAAtB,CAEA,cAAwDH,QAAQ,CAAuCmB,cAAvC,CAAhE,wCAAOK,oBAAP,eAA6BC,uBAA7B,eACA1B,SAAS,CAAC,UAAM,CACZO,cAAc,GAAGoB,IAAjB,CAAsB,SAAAC,MAAM,QAAIF,CAAAA,uBAAuB,CAACE,MAAD,CAA3B,EAA5B,EACH,CAFQ,CAEN,EAFM,CAAT,CAKA,GAAIC,CAAAA,SAAJ,CACA,OAAQJ,oBAAoB,CAACJ,MAA7B,EACI,IAAK,SAAL,CACIQ,SAAS,cACG,KAAC,QAAD,EACA,SAAS,CAAEN,OAAO,CAACV,IADnB,CAEA,IAAI,CAAEY,oBAAoB,CAACK,SAF3B,CAGA,OAAO,CAAEtB,OAHT,CAIA,uBAAuB,KAJvB,CAKA,YAAY,KALZ,EADZ,CAQA,MACJ,IAAK,SAAL,CACIqB,SAAS,cAAG,KAAC,GAAD,EAAK,SAAS,CAAEN,OAAO,CAACN,MAAxB,uBACR,KAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,KAAK,CAAEO,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC,IAAjD,EADQ,EAAZ,CAGA,MACJ,IAAK,OAAL,CACIJ,SAAS,cAAG,4BAAZ,CACA,MAlBR,CAqBA,MAAOA,CAAAA,SAAP,CACH,CAjCM","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\nimport { Box, makeStyles, useTheme } from \"@material-ui/core\"\nimport { DataGrid, GridColDef } from \"@material-ui/data-grid\"\nimport Loader from 'react-loader-spinner'\nimport { fetchShipments, FetchShipmentsResult } from \"../data/fetch-shipments\"\nimport { flattenDiagnosticMessageText } from \"typescript\"\n\nconst COLUMNS: GridColDef[] = [\n    {\n        field: 'houseBillNumber',\n        headerName: 'House Bill',\n        width: 150\n    },\n    {\n        field: 'client',\n        headerName: 'Shipper',\n        width: 200\n    },\n    {\n        field: 'origin',\n        headerName: 'Origin',\n        width: 400\n    },\n    {\n        field: 'destination',\n        headerName: 'Destination',\n        width: 400\n    },\n    {\n        field: 'mode',\n        headerName: 'Mode',\n        width: 200\n    },\n    {\n        field: 'estimatedDeparture',\n        headerName: 'Estimated Departure',\n        width: 200\n    },\n    {\n        field: 'estimatedArrival',\n        headerName: 'Estimated Arrival',\n        width: 200\n    },\n    {\n        field: 'status',\n        headerName: 'Status',\n        width: 200\n    }\n]\n\nconst useStyles = makeStyles({\n    grid: {\n        marginInline: 16,\n        display: \"flex\",\n        height: \"90%\",\n    },\n    loader: {\n        margin: 'auto',\n        width: 'fit-content',\n        marginTop: 200\n    }\n \n})\n\ntype LoadingResult = {\n    status: 'LOADING'\n}\nconst INITIAL_RESULT: LoadingResult = {\n    status: 'LOADING'\n}\n\nexport const ShipmentsPage: React.FC = () => {\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const [fetchShipmentsResult, setFetchShipmentsResult] = useState<FetchShipmentsResult | LoadingResult>(INITIAL_RESULT)\n    useEffect(() => {\n        fetchShipments().then(result => setFetchShipmentsResult(result))\n    }, [])\n    \n    \n    let component: ReactElement\n    switch (fetchShipmentsResult.status) {\n        case 'SUCCESS':\n            component = \n                        <DataGrid\n                        className={classes.grid}\n                        rows={fetchShipmentsResult.shipments}\n                        columns={COLUMNS}\n                        disableSelectionOnClick\n                        autoPageSize\n                        />\n            break;\n        case 'LOADING':\n            component = <Box className={classes.loader}>\n                <Loader type=\"Grid\" color={theme.palette.primary.main} />\n            </Box >\n            break\n        case 'ERROR':\n            component = <p>Error</p>\n            break\n    }\n\n    return component\n}"]},"metadata":{},"sourceType":"module"}