{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\components\\\\WeekGlance.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeekGlance = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const a = data[0].estimatedArrival;\n  const b = Date.parse(data[0].estimatedArrival);\n  const todayParse = Date.parse(Date());\n  const today = Date().toString;\n  const [week, setWeek] = useState([]);\n  data.sort((a, b) => {\n    const da = Date.parse(a.estimatedArrival);\n    const db = Date.parse(b.estimatedArrival);\n    return da - db;\n  });\n\n  function weekDisplay() {\n    week.length < 6 && data.forEach((e, i) => {});\n  }\n\n  weekDisplay();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [a, \" \", b, \" \", today, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: Date.parse(e.estimatedArrival)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeekGlance, \"eOnj1KrQmcwvus/08VtFILt1b9s=\");\n\n_c = WeekGlance;\nexport default WeekGlance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekGlance\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/components/WeekGlance.tsx"],"names":["useState","WeekGlance","data","a","estimatedArrival","b","Date","parse","todayParse","today","toString","week","setWeek","sort","da","db","weekDisplay","length","forEach","e","i","console","log","map"],"mappings":";;;AAAA,SAAkCA,QAAlC,QAAkD,OAAlD;;;AAWA,MAAMC,UAAU,GAAE,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AACjC,QAAMC,CAAC,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAlB;AACA,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAnB,CAAV;AACA,QAAMI,UAAc,GAAGF,IAAI,CAACC,KAAL,CAAWD,IAAI,EAAf,CAAvB;AAEA,QAAMG,KAAS,GAAGH,IAAI,GAAGI,QAAzB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAIAE,EAAAA,IAAI,CAACW,IAAL,CAAU,CAACV,CAAD,EAAOE,CAAP,KAAe;AACrB,UAAMS,EAAM,GAAGR,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAACC,gBAAb,CAAf;AACA,UAAMW,EAAM,GAAGT,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACD,gBAAb,CAAf;AACA,WAAOU,EAAE,GAACC,EAAV;AACH,GAJD;;AAOA,WAASC,WAAT,GAAsB;AAClBL,IAAAA,IAAI,CAACM,MAAL,GAAc,CAAd,IAEAf,IAAI,CAACgB,OAAL,CAAa,CAACC,CAAD,EAAQC,CAAR,KAAmB,CAI/B,CAJD,CAFA;AAOH;;AACDJ,EAAAA,WAAW;AAIXK,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACA,sBACI;AAAA,eACKC,CADL,OACSE,CADT,OACaI,KADb,eAEI;AAAA,gBACKP,IAAI,CAACqB,GAAL,CAAS,CAACJ,CAAD,EAAQC,CAAR,KAAqB;AAC3B,4BACI;AAAA,iCACI;AAAA,sBAAId,IAAI,CAACC,KAAL,CAAWY,CAAC,CAACf,gBAAb;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUgB,CAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA9CD;;GAAMnB,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\r\nimport { format, getTime } from 'date-fns'\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\ninterface Props {\r\n    data: any\r\n}\r\n\r\n\r\nconst WeekGlance= ({data}: Props) => {\r\n    const a = data[0].estimatedArrival\r\n    const b = Date.parse(data[0].estimatedArrival)\r\n    const todayParse:any = Date.parse(Date())\r\n   \r\n    const today:any = Date().toString\r\n\r\n    const [week, setWeek] = useState([])\r\n\r\n\r\n\r\n    data.sort((a:any,b:any)=>{\r\n        const da:any = Date.parse(a.estimatedArrival)\r\n        const db:any = Date.parse(b.estimatedArrival)\r\n        return da-db\r\n    })\r\n\r\n  \r\n    function weekDisplay(){\r\n        week.length < 6 \r\n        &&\r\n        data.forEach((e:any, i:number)=>{\r\n             \r\n             \r\n            \r\n        })\r\n    }\r\n    weekDisplay()\r\n    \r\n   \r\n\r\n    console.log(data)\r\n    return (\r\n        <div>\r\n            {a} {b} {today}\r\n            <div>\r\n                {data.map((e:any, i:number) => {\r\n                    return(\r\n                        <div key={i}>\r\n                            <p>{Date.parse(e.estimatedArrival)}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekGlance;\r\n"]},"metadata":{},"sourceType":"module"}