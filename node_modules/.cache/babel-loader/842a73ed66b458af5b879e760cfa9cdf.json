{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\pages\\\\DashboardPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Loader from 'react-loader-spinner';\nimport { fetchShipments } from \"../data/fetch-shipments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  loader: {\n    margin: 'auto',\n    width: 'fit-content',\n    marginTop: 200\n  }\n});\nconst INITIAL_RESULT = {\n  status: 'LOADING'\n};\nexport const DashboardPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const [fetchShipmentsResult, setFetchShipmentsResult] = useState(INITIAL_RESULT);\n  useEffect(() => {\n    fetchShipments().then(result => setFetchShipmentsResult(result));\n  }, []);\n  console.log(fetchShipmentsResult); // console.log\n\n  let component;\n\n  switch (fetchShipmentsResult.status) {\n    case 'SUCCESS':\n      component = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\\"mom\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this);\n      break;\n\n    case 'LOADING':\n      component = /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loader,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Grid\",\n          color: theme.palette.primary.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this);\n      break;\n\n    case 'ERROR':\n      component = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this);\n      break;\n  }\n\n  return component;\n};\n\n_s(DashboardPage, \"0sY06AbahMq8GiZXittgiskWCHQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/pages/DashboardPage.tsx"],"names":["useEffect","useState","Loader","fetchShipments","useStyles","makeStyles","loader","margin","width","marginTop","INITIAL_RESULT","status","DashboardPage","classes","fetchShipmentsResult","setFetchShipmentsResult","then","result","console","log","component","theme","palette","primary","main"],"mappings":";;;AAAI,SAAuBA,SAAvB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAAqD,yBAArD;;AAIA,MAAMC,SAAS,GAAGC,UAAU,CAAC;AACzBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,KAAK,EAAE,aAFH;AAGJC,IAAAA,SAAS,EAAE;AAHP;AADiB,CAAD,CAA5B;AAYA,MAAMC,cAA6B,GAAG;AAClCC,EAAAA,MAAM,EAAE;AAD0B,CAAtC;AAIA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AACzC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,oBAAD,EAAuBC,uBAAvB,IAAkDd,QAAQ,CAAuCS,cAAvC,CAAhE;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,GAAGa,IAAjB,CAAsBC,MAAM,IAAIF,uBAAuB,CAACE,MAAD,CAAvD;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,oBAAZ,EAPyC,CAQzC;;AAEA,MAAIM,SAAJ;;AACA,UAAQN,oBAAoB,CAACH,MAA7B;AACI,SAAK,SAAL;AACIS,MAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ;AAEA;;AACJ,SAAK,SAAL;AACIA,MAAAA,SAAS,gBAAG,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACP,MAAxB;AAAA,+BACR,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,KAAK,EAAEe,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,cAAZ;AAGA;;AACJ,SAAK,OAAL;AACIJ,MAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ;AACA;AAZR;;AAeA,SAAOA,SAAP;AACH,CA3BM;;GAAMR,a;UACOR,S;;;KADPQ,a","sourcesContent":["    import { ReactElement, useEffect, useState } from \"react\"\n    import Loader from 'react-loader-spinner'\n    import { fetchShipments, FetchShipmentsResult } from \"../data/fetch-shipments\"\n    \n\n    \n    const useStyles = makeStyles({\n        loader: {\n            margin: 'auto',\n            width: 'fit-content',\n            marginTop: 200\n        }\n     \n    })\n    \n    type LoadingResult = {\n        status: 'LOADING'\n    }\n    const INITIAL_RESULT: LoadingResult = {\n        status: 'LOADING'\n    }\n    \n    export const DashboardPage: React.FC = () => {\n        const classes = useStyles()\n        const [fetchShipmentsResult, setFetchShipmentsResult] = useState<FetchShipmentsResult | LoadingResult>(INITIAL_RESULT)\n        useEffect(() => {\n            fetchShipments().then(result => setFetchShipmentsResult(result))\n        }, [])\n\n        console.log(fetchShipmentsResult)\n        // console.log\n\n        let component: ReactElement\n        switch (fetchShipmentsResult.status) {\n            case 'SUCCESS':\n                component = <div>\"mom\"</div>\n                            \n                break;\n            case 'LOADING':\n                component = <Box className={classes.loader}>\n                    <Loader type=\"Grid\" color={theme.palette.primary.main} />\n                </Box >\n                break\n            case 'ERROR':\n                component = <p>Error</p>\n                break\n        }\n    \n        return component\n    }"]},"metadata":{},"sourceType":"module"}