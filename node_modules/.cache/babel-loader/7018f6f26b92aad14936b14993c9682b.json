{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\pages\\\\ShipmentsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Box, makeStyles, useTheme } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Loader from 'react-loader-spinner';\nimport { fetchShipments } from \"../data/fetch-shipments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLUMNS = [{\n  field: 'houseBillNumber',\n  headerName: 'House Bill',\n  width: 150\n}, {\n  field: 'client',\n  headerName: 'Shipper',\n  width: 200\n}, {\n  field: 'origin',\n  headerName: 'Origin',\n  width: 400\n}, {\n  field: 'destination',\n  headerName: 'Destination',\n  width: 400\n}, {\n  field: 'mode',\n  headerName: 'Mode',\n  width: 200\n}, {\n  field: 'estimatedDeparture',\n  headerName: 'Estimated Departure',\n  width: 200\n}, {\n  field: 'estimatedArrival',\n  headerName: 'Estimated Arrival',\n  width: 200\n}, {\n  field: 'status',\n  headerName: 'Status',\n  width: 200\n}];\nconst useStyles = makeStyles({\n  grid: {\n    marginInline: 16\n  },\n  loader: {\n    margin: 'auto',\n    width: 'fit-content',\n    marginTop: 200\n  }\n});\nconst INITIAL_RESULT = {\n  status: 'LOADING'\n};\nexport const ShipmentsPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [fetchShipmentsResult, setFetchShipmentsResult] = useState(INITIAL_RESULT);\n  useEffect(() => {\n    fetchShipments().then(result => setFetchShipmentsResult(result));\n  }, []);\n  let component;\n\n  switch (fetchShipmentsResult.status) {\n    case 'SUCCESS':\n      component = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          height: \"80vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          className: classes.grid,\n          rows: fetchShipmentsResult.shipments,\n          columns: COLUMNS,\n          rowsPerPageOptions: [5, 10, 20],\n          pageSize: 20,\n          disableSelectionOnClick: true,\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this);\n      break;\n\n    case 'LOADING':\n      component = /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loader,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Grid\",\n          color: theme.palette.primary.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this);\n      break;\n\n    case 'ERROR':\n      component = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this);\n      break;\n  }\n\n  return component;\n};\n\n_s(ShipmentsPage, \"aaNOSVMT9bV7sP4FGwZJtVzcD70=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = ShipmentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShipmentsPage\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/pages/ShipmentsPage.tsx"],"names":["useEffect","useState","Box","makeStyles","useTheme","DataGrid","Loader","fetchShipments","COLUMNS","field","headerName","width","useStyles","grid","marginInline","loader","margin","marginTop","INITIAL_RESULT","status","ShipmentsPage","classes","theme","fetchShipmentsResult","setFetchShipmentsResult","then","result","component","display","height","shipments","palette","primary","main"],"mappings":"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","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\nimport { Box, makeStyles, useTheme } from \"@material-ui/core\"\nimport { DataGrid, GridColDef } from \"@material-ui/data-grid\"\nimport Loader from 'react-loader-spinner'\nimport { fetchShipments, FetchShipmentsResult } from \"../data/fetch-shipments\"\n\nconst COLUMNS: GridColDef[] = [\n    {\n        field: 'houseBillNumber',\n        headerName: 'House Bill',\n        width: 150\n    },\n    {\n        field: 'client',\n        headerName: 'Shipper',\n        width: 200\n    },\n    {\n        field: 'origin',\n        headerName: 'Origin',\n        width: 400\n    },\n    {\n        field: 'destination',\n        headerName: 'Destination',\n        width: 400\n    },\n    {\n        field: 'mode',\n        headerName: 'Mode',\n        width: 200\n    },\n    {\n        field: 'estimatedDeparture',\n        headerName: 'Estimated Departure',\n        width: 200\n    },\n    {\n        field: 'estimatedArrival',\n        headerName: 'Estimated Arrival',\n        width: 200\n    },\n    {\n        field: 'status',\n        headerName: 'Status',\n        width: 200\n    }\n]\n\nconst useStyles = makeStyles({\n    grid: {\n        marginInline: 16,\n        \n    },\n    loader: {\n        margin: 'auto',\n        width: 'fit-content',\n        marginTop: 200\n    }\n \n})\n\ntype LoadingResult = {\n    status: 'LOADING'\n}\nconst INITIAL_RESULT: LoadingResult = {\n    status: 'LOADING'\n}\n\nexport const ShipmentsPage: React.FC = () => {\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const [fetchShipmentsResult, setFetchShipmentsResult] = useState<FetchShipmentsResult | LoadingResult>(INITIAL_RESULT)\n    useEffect(() => {\n        fetchShipments().then(result => setFetchShipmentsResult(result))\n    }, [])\n    \n    \n    let component: ReactElement\n    switch (fetchShipmentsResult.status) {\n        case 'SUCCESS':\n            component = \n                    <div style={{display: \"flex\", height: \"80vh\"}}>\n                        <DataGrid\n                        className={classes.grid}\n                        rows={fetchShipmentsResult.shipments}\n                        columns={COLUMNS}\n                        rowsPerPageOptions={[5, 10, 20]}\n                        pageSize={20}\n                        disableSelectionOnClick\n                        autoHeight\n                        />\n                    </div>\n            break;\n        case 'LOADING':\n            component = <Box className={classes.loader}>\n                <Loader type=\"Grid\" color={theme.palette.primary.main} />\n            </Box >\n            break\n        case 'ERROR':\n            component = <p>Error</p>\n            break\n    }\n\n    return component\n}"]},"metadata":{},"sourceType":"module"}