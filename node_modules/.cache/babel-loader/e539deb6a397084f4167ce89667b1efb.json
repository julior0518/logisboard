{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\fe-code-challenge_2e0e8f4 (extract.me)\\\\src\\\\components\\\\WeekGlance.tsx\";\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeekGlance = _ref => {\n  let {\n    data\n  } = _ref;\n  const a = data[0].estimatedArrival;\n  const b = Date.parse(data[0].estimatedArrival);\n  const today = format(new Date(), \"MM/dd/yy\");\n  const todaysIndex = data.findIndex(e => e.estimatedArrival === today);\n  data.sort((a, b) => {\n    const da = Date.parse(a.estimatedArrival);\n    const db = Date.parse(b.estimatedArrival);\n    return da - db;\n  });\n\n  function week() {\n    for (let i = 0; i <= 6; i++) {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: data[todaysIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: week()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WeekGlance;\nexport default WeekGlance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekGlance\");","map":{"version":3,"sources":["C:/Users/julio/Desktop/fe-code-challenge_2e0e8f4 (extract.me)/src/components/WeekGlance.tsx"],"names":["format","WeekGlance","data","a","estimatedArrival","b","Date","parse","today","todaysIndex","findIndex","e","sort","da","db","week","i"],"mappings":";AACA,SAASA,MAAT,QAAgC,UAAhC;;;AAUA,MAAMC,UAAU,GAAE,QAAmB;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AACjC,QAAMC,CAAC,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAlB;AACA,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,CAAC,CAAD,CAAJ,CAAQE,gBAAnB,CAAV;AACA,QAAMI,KAAS,GAAGR,MAAM,CAAC,IAAIM,IAAJ,EAAD,EAAa,UAAb,CAAxB;AACA,QAAMG,WAAmB,GAAIP,IAAI,CAACQ,SAAL,CAAgBC,CAAD,IAAYA,CAAC,CAACP,gBAAF,KAAuBI,KAAlD,CAA7B;AACAN,EAAAA,IAAI,CAACU,IAAL,CAAU,CAACT,CAAD,EAAOE,CAAP,KAAe;AACrB,UAAMQ,EAAM,GAAGP,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAACC,gBAAb,CAAf;AACA,UAAMU,EAAM,GAAGR,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACD,gBAAb,CAAf;AACA,WAAOS,EAAE,GAACC,EAAV;AACH,GAJD;;AAOA,WAASC,IAAT,GAAe;AACX,SAAK,IAAIC,CAAQ,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAAgCA,CAAC,EAAjC,EAAqC;AACjC;;AACA;AAAA;AAAA,kBACCd,IAAI,CAACO,WAAD;AADL;AAAA;AAAA;AAAA;AAAA;AAIH;AACJ;;AACD,sBACI;AAAA,cACIM,IAAI;AADR;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3BD;;KAAMd,U;AA6BN,eAAeA,UAAf","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\r\nimport { format, getTime } from 'date-fns'\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\ninterface Props {\r\n    data: any\r\n}\r\n\r\n\r\nconst WeekGlance= ({data}: Props) => {\r\n    const a = data[0].estimatedArrival\r\n    const b = Date.parse(data[0].estimatedArrival)\r\n    const today:any = format(new Date(), \"MM/dd/yy\")\r\n    const todaysIndex: number  = data.findIndex((e:any) =>  e.estimatedArrival === today)\r\n    data.sort((a:any,b:any)=>{\r\n        const da:any = Date.parse(a.estimatedArrival)\r\n        const db:any = Date.parse(b.estimatedArrival)\r\n        return da-db\r\n    })\r\n\r\n   \r\n    function week(){\r\n        for (let i:number = 0; i <= 6 ; i ++){\r\n            return\r\n            <div>\r\n            {data[todaysIndex]}\r\n         \r\n            </div>\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n           {week()}\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekGlance;\r\n"]},"metadata":{},"sourceType":"module"}