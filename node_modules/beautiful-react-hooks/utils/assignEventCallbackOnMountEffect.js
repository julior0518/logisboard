/* beautiful-react-hooks version: 0.35.0 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');

var assignEventCallbackOnMountEffect = function assignEventCallbackOnMountEffect(targetRef, handlerRef, eventName) {
  react.useEffect(function () {
    var cb = function cb(mouseEvent) {
      if (handlerRef.current) {
        handlerRef.current(mouseEvent);
      }
    };

    var target;

    if (targetRef !== null && !!targetRef.current) {
      target = targetRef.current;
    }

    if (targetRef === null) {
      target = document;
    }

    if (target && target.addEventListener) {
      target.addEventListener(eventName, cb);
    }

    return function () {
      if (target && target.removeEventListener) {
        target.removeEventListener(eventName, cb);
      }
    };
  }, []);
};

exports.default = assignEventCallbackOnMountEffect;
