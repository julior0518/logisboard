/* beautiful-react-hooks version: 0.35.0 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('./_virtual/_rollupPluginBabelHelpers.js');
var createHandlerSetter = require('./utils/createHandlerSetter.js');
var createCbSetterErrorProxy = require('./utils/createCbSetterErrorProxy.js');
var hasOwnProperty = require('./utils/hasOwnProperty.js');
var assignEventCallbackOnMountEffect = require('./utils/assignEventCallbackOnMountEffect.js');

var useMouseEvents = function useMouseEvents() {
  var targetRef = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

  var _createHandlerSetter = createHandlerSetter['default'](),
      _createHandlerSetter2 = _rollupPluginBabelHelpers.slicedToArray(_createHandlerSetter, 2),
      onMouseDownHandler = _createHandlerSetter2[0],
      setOnMouseDown = _createHandlerSetter2[1];

  var _createHandlerSetter3 = createHandlerSetter['default'](),
      _createHandlerSetter4 = _rollupPluginBabelHelpers.slicedToArray(_createHandlerSetter3, 2),
      onMouseEnterHandler = _createHandlerSetter4[0],
      setOnMouseEnter = _createHandlerSetter4[1];

  var _createHandlerSetter5 = createHandlerSetter['default'](),
      _createHandlerSetter6 = _rollupPluginBabelHelpers.slicedToArray(_createHandlerSetter5, 2),
      onMouseLeaveHandler = _createHandlerSetter6[0],
      setOnMouseLeave = _createHandlerSetter6[1];

  var _createHandlerSetter7 = createHandlerSetter['default'](),
      _createHandlerSetter8 = _rollupPluginBabelHelpers.slicedToArray(_createHandlerSetter7, 2),
      onMouseMoveHandler = _createHandlerSetter8[0],
      setOnMouseMove = _createHandlerSetter8[1];

  var _createHandlerSetter9 = createHandlerSetter['default'](),
      _createHandlerSetter10 = _rollupPluginBabelHelpers.slicedToArray(_createHandlerSetter9, 2),
      onMouseOutHandler = _createHandlerSetter10[0],
      setOnMouseOut = _createHandlerSetter10[1];

  var _createHandlerSetter11 = createHandlerSetter['default'](),
      _createHandlerSetter12 = _rollupPluginBabelHelpers.slicedToArray(_createHandlerSetter11, 2),
      onMouseOverHandler = _createHandlerSetter12[0],
      setOnMouseOver = _createHandlerSetter12[1];

  var _createHandlerSetter13 = createHandlerSetter['default'](),
      _createHandlerSetter14 = _rollupPluginBabelHelpers.slicedToArray(_createHandlerSetter13, 2),
      onMouseUpHandler = _createHandlerSetter14[0],
      setOnMouseUp = _createHandlerSetter14[1];

  if (targetRef !== null && !hasOwnProperty['default'](targetRef, 'current')) {
    return createCbSetterErrorProxy['default']('Unable to assign any mouse event to the given ref');
  }

  assignEventCallbackOnMountEffect['default'](targetRef, onMouseDownHandler, 'mousedown');
  assignEventCallbackOnMountEffect['default'](targetRef, onMouseEnterHandler, 'mouseenter');
  assignEventCallbackOnMountEffect['default'](targetRef, onMouseLeaveHandler, 'mouseleave');
  assignEventCallbackOnMountEffect['default'](targetRef, onMouseMoveHandler, 'mousemove');
  assignEventCallbackOnMountEffect['default'](targetRef, onMouseOutHandler, 'mouseout');
  assignEventCallbackOnMountEffect['default'](targetRef, onMouseOverHandler, 'mouseover');
  assignEventCallbackOnMountEffect['default'](targetRef, onMouseUpHandler, 'mouseup');
  return Object.freeze({
    onMouseDown: setOnMouseDown,
    onMouseEnter: setOnMouseEnter,
    onMouseLeave: setOnMouseLeave,
    onMouseMove: setOnMouseMove,
    onMouseOut: setOnMouseOut,
    onMouseOver: setOnMouseOver,
    onMouseUp: setOnMouseUp
  });
};

exports.default = useMouseEvents;
